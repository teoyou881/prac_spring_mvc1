#required.item.name=Product name is required.
#range.item.price=Price must be between {0} and {1}. errors.properties
#max.item.quantity=Quantity must be between {0} and {1}.
#totalPriceMin=Total price must be over {0}. Current price is = {1}
#required.default=This field is required. errors.properties & default



#==ObjectError==
# Level1
totalPriceMin.item= total price must be over {0}. Current price is = {1}

#Level2 - \uC0DD\uB7B5
totalPriceMin= total price must be over {0}. Current price is = {1}


#==FieldError==
# Level1
required.item.itemName=Product name is required.
range.item.price=price must be between {0} and {1}.
max.item.quantity=quantity must be between {0} and {1}.

#Level2 - \uC0DD\uB7B5

#Level3
required.java.lang.String = required string.
required.java.lang.Integer = required integer.
min.java.lang.String = enter at least {0} characters.
min.java.lang.Integer = enter at least {0} integer.
range.java.lang.String = enter {0} ~ {1} characters.
range.java.lang.Integer = enter {0} ~ {1} integer.
max.java.lang.String = enter up to {0} characters.
max.java.lang.Integer = enter up to {0} integer.

#Level4
required = required.
min= at least {0}
range= allowed between {0} and {1}
max= allowed up to {0}
```

# typeMismatch
# Level1
typeMismatch.item.quantity=quantity must be a number.
typeMismatch.item.price=price must be a number.
typeMismatch.item.itemName=Product name must be a string.

# Level2
typeMismatch.price=price must be a number.
# Level3
typeMismatch.java.lang.Integer = must be a number.
# Level4
typeMismatch = type you entered is not matched with what we can accept.

